/*
 * PortainerCE API
 *
 * Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API. Examples are available at https://documentation.portainer.io/api/api-examples/ You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).  # Authentication  Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used. Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request with the **Bearer** authentication mechanism.  Example:  ``` Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE ```  # Security  Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).  Different access policies are available:  - Public access - Authenticated access - Restricted access - Administrator access  ### Public access  No authentication is required to access the environments(endpoints) with this access policy.  ### Authenticated access  Authentication is required to access the environments(endpoints) with this access policy.  ### Restricted access  Authentication is required to access the environments(endpoints) with this access policy. Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.  ### Administrator access  Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.  # Execute Docker requests  Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).  Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.  To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).  # Private Registry  Using private registry, you will need to pass a based64 encoded JSON string ‘{\"registryId\":\\<registryID value\\>}’ inside the Request Header. The parameter name is \"X-Registry-Auth\". \\<registryID value\\> - The registry ID where the repository was created.  Example:  ``` eyJyZWdpc3RyeUlkIjoxfQ== ```  **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/).
 *
 * API version: 2.17.1
 * Contact: info@portainer.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package portainer

type PortainerEndpoint struct {
	// The identifier of the AMT Device associated with this environment(endpoint)
	AMTDeviceGUID   string  `json:"AMTDeviceGUID,omitempty"`
	AuthorizedTeams []int32 `json:"AuthorizedTeams,omitempty"`
	// Deprecated in DBVersion == 18
	AuthorizedUsers  []int32                    `json:"AuthorizedUsers,omitempty"`
	AzureCredentials *PortainerAzureCredentials `json:"AzureCredentials,omitempty"`
	// Maximum version of docker-compose
	ComposeSyntaxMaxVersion string `json:"ComposeSyntaxMaxVersion,omitempty"`
	// The check in interval for edge agent (in seconds)
	EdgeCheckinInterval int32 `json:"EdgeCheckinInterval,omitempty"`
	// The identifier of the edge agent associated with this environment(endpoint)
	EdgeID string `json:"EdgeID,omitempty"`
	// The key which is used to map the agent to Portainer
	EdgeKey string          `json:"EdgeKey,omitempty"`
	Gpus    []PortainerPair `json:"Gpus,omitempty"`
	// Environment(Endpoint) group identifier
	GroupId int32 `json:"GroupId,omitempty"`
	// Environment(Endpoint) Identifier
	Id int32 `json:"Id,omitempty"`
	// Associated Kubernetes data
	Kubernetes *PortainerKubernetesData `json:"Kubernetes,omitempty"`
	// Environment(Endpoint) name
	Name string `json:"Name,omitempty"`
	// Whether we need to run any \"post init migrations\".
	PostInitMigrations *PortainerEndpointPostInitMigrations `json:"PostInitMigrations,omitempty"`
	// URL or IP address where exposed containers will be reachable
	PublicURL string `json:"PublicURL,omitempty"`
	// List of snapshots
	Snapshots []PortainerDockerSnapshot `json:"Snapshots,omitempty"`
	// The status of the environment(endpoint) (1 - up, 2 - down)
	Status int32 `json:"Status,omitempty"`
	// Deprecated fields Deprecated in DBVersion == 4
	TLS       bool                       `json:"TLS,omitempty"`
	TLSCACert string                     `json:"TLSCACert,omitempty"`
	TLSCert   string                     `json:"TLSCert,omitempty"`
	TLSConfig *PortainerTlsConfiguration `json:"TLSConfig,omitempty"`
	TLSKey    string                     `json:"TLSKey,omitempty"`
	// List of tag identifiers to which this environment(endpoint) is associated
	TagIds []int32 `json:"TagIds,omitempty"`
	// Deprecated in DBVersion == 22
	Tags []string `json:"Tags,omitempty"`
	// List of team identifiers authorized to connect to this environment(endpoint)
	TeamAccessPolicies *PortainerTeamAccessPolicies `json:"TeamAccessPolicies,omitempty"`
	// Environment(Endpoint) environment(endpoint) type. 1 for a Docker environment(endpoint), 2 for an agent on Docker environment(endpoint) or 3 for an Azure environment(endpoint).
	Type_ int32 `json:"Type,omitempty"`
	// URL or IP address of the Docker host associated to this environment(endpoint)
	URL string `json:"URL,omitempty"`
	// List of user identifiers authorized to connect to this environment(endpoint)
	UserAccessPolicies *PortainerUserAccessPolicies `json:"UserAccessPolicies,omitempty"`
	Agent              *PortainerEndpointAgent      `json:"agent,omitempty"`
	Edge               *PortainerEndpointEdge       `json:"edge,omitempty"`
	// IsEdgeDevice marks if the environment was created as an EdgeDevice
	IsEdgeDevice bool `json:"isEdgeDevice,omitempty"`
	// LastCheckInDate mark last check-in date on checkin
	LastCheckInDate int32 `json:"lastCheckInDate,omitempty"`
	// QueryDate of each query with the endpoints list
	QueryDate int32 `json:"queryDate,omitempty"`
	// Environment(Endpoint) specific security settings
	SecuritySettings *PortainerEndpointSecuritySettings `json:"securitySettings,omitempty"`
	// Whether the device has been trusted or not by the user
	UserTrusted bool `json:"userTrusted,omitempty"`
}
